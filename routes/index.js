var express = require('express');
var router = express.Router();

const tableList = [
  {'id':1, 'term': 'DevOps', 'description': 'DevOps is a set of practices that aim to enhance collaboration between software development (Dev) and IT operations (Ops) teams. It focuses on automating and streamlining the software development and deployment process and promoting a shared responsibility for the entire software delivery lifecycle, from development to deployment and maintenance.',
   'references': 'GitLab (2022) "What is DevOps?", accessed 23 July 2023 https://about.gitlab.com/topics/devops/. \n Atlassian (2016) "What is DevOps?", DevOps, Software Development, accessed 23 July 2023 https://www.atlassian.com/devops.'},
  {'id':2, 'term': 'Microservices', 'description': 'Microservices is an architectural approach where a large application is broken down into smaller, loosely coupled services. Each service serves a specific function and communicates with others through APIs. This architecture promotes agility, scalability, and easier maintenance.',
   'references': 'Google Cloud. (n.d.) "What Is Microservices Architecture?", accessed 23 July 2023 https://cloud.google.com/learn/what-is-microservices-architecture. \nJeremy H (3 July 2023) "REST APIs vs Microservices: Key Differences", accessed 23 July 2023 https://blog.dreamfactory.com/restful-api-and-microservices-the-differences-and-how-they-work-together/.'},
  {'id':3, 'term': 'Continuous Integration (CI)', 'description': 'Continuous Integration is a software development practice where code changes are automatically integrated into a shared repository frequently, preferably multiple times a day. It involves running automated tests to ensure that the new code does not break existing functionality and allows teams to identify and fix issues early in the development cycle.',
   'references': 'Coupland, M. (July 2021). "Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends", DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-25 \nPittet, S. (2019) "Continuous integration vs. continuous delivery vs. continuous deployment", Atlassian, accessed 23 July 2023 https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment.'},
  {'id':4, 'term': 'Continuous Delivery (CD)', 'description': 'Continuous Delivery is an extension of continuous integration where code changes are automatically deployed to a production-like environment after passing through automated testing. The process ensures that the software can be released to production at any time, reducing the time between development and deployment.', 
  'references': 'Coupland, M. (July 2021). "Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends", DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-26 \nPittet, S. (2019) "Continuous integration vs. continuous delivery vs. continuous deployment", Atlassian, accessed 23 July 2023 https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment.'},
  {'id':5, 'term': 'Continuous Deployment (CD): ', 'description': 'Continuous Deployment is an extension of Continuous Integration. While Continuous Integration focuses on automating code integration and testing, Continuous Deployment takes it a step further by automatically deploying code changes to production environments once they pass all the automated tests. In other words, Continuous Deployment ensures that every code change that successfully passes the automated tests is automatically released and made live in the production environment without any manual intervention. ', 
  'references': 'Coupland, M. (July 2021). ‘Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends’, DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-27 \nPittet, S. (2019) ‘Continuous integration vs. continuous delivery vs. continuous deployment’, Atlassian, accessed 23 July 2023 https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment.'},
  {'id':6, 'term': 'Kanplan/ Scrumban', 'description': 'Kanplan, also known as Scrumban, is an Agile project management approach that combines principles and practices from Scrum and Kanban. It is a hybrid methodology that seeks to leverage the strengths of both Scrum and Kanban to improve the efficiency and flexibility of software development and project management processes.', 
  'references': 'Coupland, M. (July 2021). ‘Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends’, DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-35 \nProductPlaln. (n.d.) ‘Scrumban’, accessed 23 July 2023 https://www.productplan.com/glossary/scrumban/.'},
  {'id':7, 'term': 'Scaled Agile Framework (SAFe)', 'description': 'This is a comprehensive and widely-used framework for scaling Agile practices to large organizations and enterprises. It provides a set of principles, practices, and guidelines that help organizations implement and manage Agile methodologies across multiple teams, projects, and business units, ensuring alignment and coordination in the development and delivery of large-scale software and systems.', 
  'references': 'Piikkila, J. (2022) ‘What is SAFe?’, Atlassian, accessed 23 July 2023: https://www.atlassian.com/agile/agile-at-scale/what-is-safe. \nScaled Agile. (n.d.). ‘What is Safe: The Leading Framework For Business Agility’, accessed 23 July 2023 https://scaledagile.com/what-is-safe/.'},
  {'id':8, 'term': 'Test-Driven Development (TDD) and Behavior-Driven Development (BDD)', 'description': 'Test-Driven Development (TDD) is a software development approach where developers write automated test cases before writing the actual code. Behavior-Driven Development (BDD) extends the principles of Test-Driven Development (TDD) by focusing on improving collaboration between developers, testers, and non-technical stakeholders. BDD emphasizes communication and shared understanding of requirements through the use of a common domain-specific language.', 
  'references': 'Clinton, F. (2023) ‘TDD vs. BDD: Pros and Cons for Agile Development’, Medium, accessed 23 July 2023 https://medium.com/@realtalkdev/tdd-vs-bdd-pros-and-cons-for-agile-development-2e8e6f0e0e14 \nUnadkat, J. (15 June 2023) ‘TDD vs BDD vs ATDD : Key Differences’, BrowserStack, accessed 23 July 2023 https://www.browserstack.com/guide/tdd-vs-bdd-vs-atdd.'},
  {'id':9, 'term': 'Containerization', 'description': 'Containerization is a technology that allows applications to run in isolated environments called containers. Containers package the application code, runtime, system tools, and libraries, ensuring consistency across different environments and simplifying deployment. ', 
  'references': 'Alvarenga, G. (17 February 2023) ‘What is Containerization? Benefits, Use Cases, And How It Works’, CrowdStrike, accessed 23 July 2023 https://www.crowdstrike.com/cybersecurity-101/cloud-security/containerization/. \nAmazon Web Services, Inc. (n.d.). ‘What is Containerization?’, AWS, accessed 23 July 2023 https://aws.amazon.com/what-is/containerization/.'},
  {'id':10, 'term': 'Docker', 'description': 'Docker is a popular open-source containerization platform that enables developers to build, ship, and run applications in containers. Docker allows applications to run consistently and reliably across different environments, from development to testing and production.', 
  'references': 'Docker (2020) ‘Docker overview’ [online] Docker Documentation. accessed 23 July 2023 https://docs.docker.com/get-started/overview/.'}
  ];

/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { title: 'SIT722 DevOps Glossary', subhead: 'Welcome to my website showing a collection of DevOps terms and their brief descriptions.', table:tableList });
});

module.exports = router;
