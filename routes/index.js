var express = require('express');
var router = express.Router();

const tableList = [
  {'id':1, 'term': 'DevOps', 'description': 'DevOps is a set of practices that aim to enhance collaboration between software development (Dev) and IT operations (Ops) teams. It focuses on automating and streamlining the software development and deployment process and promoting a shared responsibility for the entire software delivery lifecycle, from development to deployment and maintenance.',
   'references': 'GitLab (2022) "What is DevOps?", accessed 23 July 2023 https://about.gitlab.com/topics/devops/. \n Atlassian (2016) "What is DevOps?", DevOps, Software Development, accessed 23 July 2023 https://www.atlassian.com/devops.'},
  {'id':2, 'term': 'Microservices', 'description': 'Microservices is an architectural approach where a large application is broken down into smaller, loosely coupled services. Each service serves a specific function and communicates with others through APIs. This architecture promotes agility, scalability, and easier maintenance.',
   'references': 'Google Cloud. (n.d.) "What Is Microservices Architecture?", accessed 23 July 2023 https://cloud.google.com/learn/what-is-microservices-architecture. \nJeremy H (3 July 2023) "REST APIs vs Microservices: Key Differences", accessed 23 July 2023 https://blog.dreamfactory.com/restful-api-and-microservices-the-differences-and-how-they-work-together/.'},
  {'id':3, 'term': 'Continuous Integration (CI)', 'description': 'Continuous Integration is a software development practice where code changes are automatically integrated into a shared repository frequently, preferably multiple times a day. It involves running automated tests to ensure that the new code does not break existing functionality and allows teams to identify and fix issues early in the development cycle.',
   'references': 'Coupland, M. (July 2021). "Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends", DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-25 \nPittet, S. (2019) "Continuous integration vs. continuous delivery vs. continuous deployment", Atlassian, accessed 23 July 2023 https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment.'},
  {'id':4, 'term': 'Continuous Delivery (CD)', 'description': 'Continuous Delivery is an extension of continuous integration where code changes are automatically deployed to a production-like environment after passing through automated testing. The process ensures that the software can be released to production at any time, reducing the time between development and deployment.', 
  'references': 'Coupland, M. (July 2021). "Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends", DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-26 \nPittet, S. (2019) "Continuous integration vs. continuous delivery vs. continuous deployment", Atlassian, accessed 23 July 2023 https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment.'},
  {'id':5, 'term': 'Continuous Deployment (CD): ', 'description': 'Continuous Deployment is an extension of Continuous Integration. While Continuous Integration focuses on automating code integration and testing, Continuous Deployment takes it a step further by automatically deploying code changes to production environments once they pass all the automated tests. In other words, Continuous Deployment ensures that every code change that successfully passes the automated tests is automatically released and made live in the production environment without any manual intervention. ', 
  'references': 'Coupland, M. (July 2021). ‘Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends’, DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-27 \nPittet, S. (2019) ‘Continuous integration vs. continuous delivery vs. continuous deployment’, Atlassian, accessed 23 July 2023 https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment.'},
  {'id':6, 'term': 'Kanplan/ Scrumban', 'description': 'Kanplan, also known as Scrumban, is an Agile project management approach that combines principles and practices from Scrum and Kanban. It is a hybrid methodology that seeks to leverage the strengths of both Scrum and Kanban to improve the efficiency and flexibility of software development and project management processes.', 
  'references': 'Coupland, M. (July 2021). ‘Chapter 1: Introducing DevOps and Agile - DevOps Adoption Strategies: Principles, Processes, Tools, and Trends’, DevOps adoption strategies: principles, processes, tools, and trends, Packt Publishing, Birmingham, UK. https://learning.oreilly.com/library/view/devops-adoption-strategies/9781801076326/B17192_01_Final_ASB_ePub.xhtml#_idParaDest-35 \nProductPlaln. (n.d.) ‘Scrumban’, accessed 23 July 2023 https://www.productplan.com/glossary/scrumban/.'},
  {'id':7, 'term': 'Scaled Agile Framework (SAFe)', 'description': 'This is a comprehensive and widely-used framework for scaling Agile practices to large organizations and enterprises. It provides a set of principles, practices, and guidelines that help organizations implement and manage Agile methodologies across multiple teams, projects, and business units, ensuring alignment and coordination in the development and delivery of large-scale software and systems.', 
  'references': 'Piikkila, J. (2022) ‘What is SAFe?’, Atlassian, accessed 23 July 2023: https://www.atlassian.com/agile/agile-at-scale/what-is-safe. \nScaled Agile. (n.d.). ‘What is Safe: The Leading Framework For Business Agility’, accessed 23 July 2023 https://scaledagile.com/what-is-safe/.'},
  {'id':8, 'term': 'Test-Driven Development (TDD) and Behavior-Driven Development (BDD)', 'description': 'Test-Driven Development (TDD) is a software development approach where developers write automated test cases before writing the actual code. Behavior-Driven Development (BDD) extends the principles of Test-Driven Development (TDD) by focusing on improving collaboration between developers, testers, and non-technical stakeholders. BDD emphasizes communication and shared understanding of requirements through the use of a common domain-specific language.', 
  'references': 'Clinton, F. (2023) ‘TDD vs. BDD: Pros and Cons for Agile Development’, Medium, accessed 23 July 2023 https://medium.com/@realtalkdev/tdd-vs-bdd-pros-and-cons-for-agile-development-2e8e6f0e0e14 \nUnadkat, J. (15 June 2023) ‘TDD vs BDD vs ATDD : Key Differences’, BrowserStack, accessed 23 July 2023 https://www.browserstack.com/guide/tdd-vs-bdd-vs-atdd.'},
  {'id':9, 'term': 'Containerization', 'description': 'Containerization is a technology that allows applications to run in isolated environments called containers. Containers package the application code, runtime, system tools, and libraries, ensuring consistency across different environments and simplifying deployment. ', 
  'references': 'Alvarenga, G. (17 February 2023) ‘What is Containerization? Benefits, Use Cases, And How It Works’, CrowdStrike, accessed 23 July 2023 https://www.crowdstrike.com/cybersecurity-101/cloud-security/containerization/. \nAmazon Web Services, Inc. (n.d.). ‘What is Containerization?’, AWS, accessed 23 July 2023 https://aws.amazon.com/what-is/containerization/.'},
  {'id':10, 'term': 'Docker', 'description': 'Docker is a popular open-source containerization platform that enables developers to build, ship, and run applications in containers. Docker allows applications to run consistently and reliably across different environments, from development to testing and production.', 
  'references': 'Docker (2020) ‘Docker overview’ [online] Docker Documentation. accessed 23 July 2023 https://docs.docker.com/get-started/overview/.'},
  {'id':11, 'term': 'Configuration Management', 'description': 'This refers to the process of systematically managing and maintaining the configurations of software, hardware, or any other IT assets in an organized and controlled manner. It involves tracking changes, version control, and ensuring consistency and accuracy in the configuration of systems throughout their lifecycle. Configuration management helps in reducing errors, enhancing collaboration, and ensuring reliable and stable deployments in a DevOps environment.', 
  'references': 'Martin, M. (30 June 2023) Software Configuration Management in Software Engineering. [online] Guru99, accessed 5 August 2023. https://www.guru99.com/software-configuration-management-tutorial.html. \nSiddiqui, L. (22 June 2023) Configuration Management Explained: Benefits & Implementation Strategies. [online] Splunk-Blogs, accessed 5 August 2023. https://www.splunk.com/en_us/blog/learn/configuration-management.html'},
  {'id':12, 'term': 'Infrastructure as Code (IaC)', 'description': 'This is a practice in software development that involves managing and provisioning infrastructure resources through code and automation rather than manual processes. This means that instead of configuring servers and other infrastructure elements manually, IaC enables developers and operations teams to use code (usually in the form of declarative templates) to define and deploy infrastructure. IaC helps in achieving consistent and reproducible environments, reduces manual errors, and facilitates faster and more reliable deployments.', 
  'references': 'RedHat (11 May 2022) What is Infrastructure as Code (IaC)? [online], accessed 5 August 2023. https://www.redhat.com/en/topics/automation/what-is-infrastructure-as-code-iac. \nBigelow, S. J. (n.d.) infrastructure as code [online] TechTarget, accessed 5 August 2023. https://www.techtarget.com/searchitoperations/definition/Infrastructure-as-Code-IAC.'},
  {'id':13, 'term': 'Configuration as Code (CaC)', 'description': 'Configuration as Code extends the principles of Infrastructure as Code to the application and service configuration aspects. It involves managing and storing application configurations and settings in version-controlled files, similar to the way infrastructure is managed with IaC. This approach helps in maintaining consistent configurations across different environments and makes it easier to track and manage changes in application settings.', 
  'references': 'Bertram, A. (7 July 2021) Config as Code: What is it and how is it beneficial? [online] Octopus Deploy, accessed 5 August 2023. https://octopus.com/blog/config-as-code-what-is-it-how-is-it-beneficial. \nDas, T. (11 November 2022) Infrastructure-as-Code Vs Configuration Management: Key Differences. [online] Geekflare, accessed 5 August 2023. https://geekflare.com/infrastructure-as-code-vs-configuration-management/'},
  {'id':14, 'term': 'Deployment Pipeline', 'description': 'A Deployment Pipeline is an automated workflow that allows for the continuous delivery of software changes from development to production. It involves a series of stages (such as building, testing, and deploying) that software changes pass through in an automated fashion. The goal is to automate the entire process to ensure faster and more reliable software delivery.', 
  'references': 'PagerDuty. (n.d.) What is a Deployment Pipeline? [online], accessed 5 August 2023. https://www.pagerduty.com/resources/learn/what-is-a-deployment-pipeline/. \nMerron, D.  (13 May 2020) What is a Pipeline in Software Engineering? Intro to Deployment, CI, & CD Pipelines. [online] BMC Blogs, accessed 5 August 2023. https://www.bmc.com/blogs/deployment-pipeline/.'},
  {'id':15, 'term': 'Service Orchestration', 'description': 'Service orchestration is the process of automating and coordinating the deployment and management of various services, applications, and infrastructure components in a complex IT environment. It involves defining workflows, dependencies, and interactions among different services to ensure they work seamlessly together to achieve business objectives. Service orchestration is a key aspect of DevOps as it helps in streamlining processes and improving collaboration between development and operations teams.', 
  'references': 'www.redhat.com. (15 October 2019) What is orchestration? [online], accessed 5 August 2023. https://www.redhat.com/en/topics/automation/what-is-orchestration. \nSimsek, H. (30 June 2023) IT Automation vs. Orchestration: 5 Tips to Discover the Right Tool. [online] AIMultiple, accessed 5 August 2023. https://research.aimultiple.com/it-automation-vs-orchestration/'},
  {'id':16, 'term': 'Open Group Architecture Framework (TOGAF)', 'description': 'The Open Group Architecture Framework (TOGAF) is a widely used enterprise architecture methodology that provides a structured approach for designing, planning, implementing, and managing an organizations IT architecture. It offers a comprehensive set of guidelines, best practices, and tools to assist in the development and maintenance of enterprise architectures, ensuring alignment with business goals and strategies.', 
  'references': 'ScienceDirect (n.d.) The Open Group Architecture Framework - an overview | ScienceDirect Topics. [online], accessed 5 August 2023. https://www.sciencedirect.com/topics/computer-science/the-open-group-architecture-framework. \npubs.opengroup.org. (n.d.) The Open Group Architecture Framework Version 8.1.1. [online], accessed 5 August 2023. https://pubs.opengroup.org/architecture/togaf8-doc/arch/.'},
  {'id':17, 'term': 'Docker Architecture Development Method (ADM)', 'description': 'The Architecture Development Method (ADM) is a core component of the TOGAF framework. It is a step-by-step iterative process used to develop and evolve an enterprise architecture. ADM provides a set of guidelines and phases that enterprise architects follow to create and manage the architecture, starting from defining business goals to creating the final architecture and ensuring its continuous improvement.', 
  'references': 'vpadmin (26 January 2022. Introduction to TOGAF Architecture Development Method (ADM). [online] Cybermedian, accessed 5 August 2023. https://www.cybermedian.com/introduction-to-togaf-architecture-development-method-adm/. \nwww.opengroup.org. (n.d.) Introduction to the Architecture Development Method (ADM) [online], accessed 5 August 2023. http://www.opengroup.org/public/arch/p2/p2_intro.htm.'},
  {'id':18, 'term': 'Cross-Functional Autonomous', 'description': 'In the context of DevOps, cross-functional autonomous teams refer to self-organizing teams that consist of individuals with diverse skills and expertise necessary to handle end-to-end development, testing, and deployment of software. These teams have the authority and responsibility to make decisions and manage their work independently. Cross-functional autonomous teams promote collaboration, reduce dependencies, and lead to faster and more efficient software delivery.', 
  'references': 'pmateos (19 March 2019) Cross Functional Autonomous Teams - DevOps Principle #4. [online] Pufferfish Solutions, accessed 5 August 2023. https://www.pufferfish.solutions/post/cross-functional-autonomous-teams-devops-principle-4 \nKundu, A. (2 September 2018) Cross Functional Autonomous Teams with Technology at The Core - New Organizational Strategy (Part 3) [online] Medium, accessed 5 August 2023. https://medium.com/stretch-magazine/getting-started-with-digital-ehh-new-organizational-strategy-part-3-5efcbb700ad5'},
  {'id':19, 'term': 'Continuous Improvement', 'description': 'Continuous Improvement, often referred to as continuous improvement and continuous delivery (CI/CD), is a DevOps principle that emphasizes a culture of ongoing refinement and enhancement in the software development and delivery process. It involves the constant evaluation and optimization of workflows, tools, and practices to ensure that software is delivered quickly, reliably, and with high quality.', 
  'references': 'Janaspadana (19 January 2022) DevOps - A never-ending process of continual improvement. [online] LinkedIn, accessed 5 August 2023. https://www.linkedin.com/pulse/devops-never-ending-process-continual-/ \ndevops.talksplus (n.d.) Achieving Continuous Improvement Through DevOps | DevOps Talks. [online], accessed 5 August 2023. https://devops.talksplus.com/blog/achieving-continuous-improvement-through-devOps-5-steps-to-follow'},
  {'id':20, 'term': 'Mean Time to Recovery (MTTR)', 'description': 'Mean Time to Recovery (MTTR) is a metric used to measure the average time it takes to restore a system or service to full functionality after a failure or incident. In a DevOps context, reducing MTTR is a key objective as it signifies how quickly the development and operations teams can respond to and resolve issues, leading to improved system reliability and availability.', 
  'references': 'Fenton, S. (15 May 2023) How to measure DevOps mean time to recovery (MTTR). [online] Octopus Deploy, accessed 5 August 2023. https://octopus.com/blog/how-to-measure-mean-time-to-resolve \nSharif, A. (21 December 2022) Mean Time to Repair Explained [online], accessed 5 August 2023. https://www.crowdstrike.com/cybersecurity-101/observability/mean-time-to-repair-mttr/'},
  {'id':21, 'term': 'Mean Time Between Failures (MTBF)', 'description': 'MTBF is a metric used in reliability engineering to estimate the average amount of time that a system or component operates between failures. It provides insights into the system reliability and helps in planning maintenance and improving system resilience. In the context of containerized applications, MTBF can be used to assess how often containers or services fail and how quickly they recover.', 
  'references': 'Ganesh, H. (2023). MTBF or Meantime Between Failure | Fogwing Industrial Cloud. [online] www.fogwing.io, accessed 27 August 2023. https://www.fogwing.io/blog/what-is-mean-time-between-failure-or-mtbf/ \nKnight, A. (31 January 2017). MTBF, MTTR & MTBM, Reliablility metrics. [online], LinkedIn, accessed 27 August 2023. https://www.linkedin.com/pulse/mtbf-mttr-mtbm-reliablility-metrics-mohamed-izzaldin-ahmed.'},
  {'id':22, 'term': 'Infrastructure-as-a-Service (IaaS)', 'description': 'IaaS is a cloud computing service model where a provider offers virtualized computing resources over the internet. It includes components like virtual machines, storage, and networking. Users can rent these resources on-demand, eliminating the need to invest in and maintain physical hardware. IaaS is a fundamental building block for deploying and managing containerized applications as it provides the necessary infrastructure resources.', 
  'references': 'azure.microsoft.com. (n.d.). What is IaaS? Infrastructure as a Service | Microsoft Azure. [online], accessed 27 August 2023. https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-iaas. \nGoogle Cloud. (n.d.). What is IaaS (Infrastructure as a Service)? [online], accessed 27 August 2023https://cloud.google.com/learn/what-is-iaas.'},
  {'id':23, 'term': 'Containers', 'description': 'Containers are lightweight, stand-alone executable packages that include everything needed to run a piece of software, including the code, runtime, libraries, and system tools. They provide consistent and isolated environments for applications, ensuring that they run consistently across different computing environments. Containers are at the core of modern software development and deployment practices.', 
  'references': 'Docker (2023). What is a Container? [online] Docker, accessed 27 August 2023 https://www.docker.com/resources/what-container/. \nTilwani, R. (13 April 2023). What is Containerization in DevOps? [online], accessed 27 August 2023 https://humalect.com/blog/what-is-containerization.'},
  {'id':24, 'term': 'Docker Image', 'description': 'A Docker image is a snapshot of a containerized application, including the application code, runtime, libraries, and other dependencies. It serves as a template for creating container instances. Docker images are often used to package and distribute software, making it easy to replicate and deploy applications consistently in various environments.', 
  'references': 'Gillis, A. S. (May 2021). What is a Docker Image? Introduction and use cases. [online], accessed 27 August 2023 https://www.techtarget.com/searchitoperations/definition/Docker-image. \nPure Storage (12 October 2022). Docker Images vs. Docker Containers: Are They the Same? [online] Pure Storage Blog, accessed 27 August 2023 https://blog.purestorage.com/purely-informational/docker-images-vs-docker-containers-are-they-the-same/'},
  {'id':25, 'term': 'Container Registry', 'description': 'A container registry is a repository for storing and distributing container images. It acts as a central hub where Docker images and other container images can be uploaded, versioned, and shared with others. Popular container registries include Docker Hub, Google Container Registry, and Amazon Elastic Container Registry (ECR).', 
  'references': 'Red Hat (27 July 2022). What is a container registry? [online], accessed 27 August 2023 https://www.redhat.com/en/topics/cloud-native-apps/what-is-a-container-registry. \nMicrosoft (13 October 2022). About registries, repositories, images, and artifacts - Azure Container Registry. [online] learn.microsoft.com, accessed 27 August 2023 https://learn.microsoft.com/en-us/azure/container-registry/container-registry-concepts.'},
  {'id':26, 'term': 'Kubernetes Cluster', 'description': 'Kubernetes is an open-source container orchestration platform. A Kubernetes cluster is a set of physical or virtual machines (nodes) that run containerized applications managed by Kubernetes. The cluster includes a control plane responsible for orchestrating and scaling containers and worker nodes where the containers actually run.', 
  'references': 'Kubernetes. (12 July 2022). Kubernetes Components. [online], accessed 27 August 2023 https://kubernetes.io/docs/concepts/overview/components/. \nVMware. (2022). What is Kubernetes Cluster? | VMware Glossary. [online], accessed 27 August 2023 https://www.vmware.com/au/topics/glossary/content/kubernetes-cluster.html'},
  {'id':27, 'term': 'Docker Alpine', 'description': 'Docker Alpine refers to a lightweight Linux distribution called Alpine Linux that is often used as a base image for Docker containers. Alpine Linux is known for its minimal size and resource efficiency, making it a popular choice for creating small, efficient container images.', 
  'references': 'Burns, S. (28 October 2020). Use Docker and Alpine Linux to build lightweight containers | TechTarget. [online], accessed 27 August 2023 https://www.techtarget.com/searchitoperations/tutorial/Use-Docker-and-Alpine-Linux-to-build-lightweight-containers \nAI and the LinkedIn community (n.d.). How do you scale and deploy docker alpine or ubuntu containers across multiple servers or clouds? [online], accessed 27 August 2023 https://www.linkedin.com/advice/0/how-do-you-scale-deploy-docker-alpine-ubuntu-containers'},
  {'id':28, 'term': 'Docker Compose', 'description': 'Docker Compose is a tool for defining and running multi-container Docker applications. It uses a YAML file to describe the services, networks, and volumes required for an application architecture. Docker Compose simplifies the process of managing multiple containers that need to work together.', 
  'references': 'Docker (2020). Overview of Docker Compose. [online] Docker Documentation, accessed 27 August 2023 https://docs.docker.com/compose/. \nFawcett, A. (20 July 2020). Docker Compose Tutorial: advanced Docker made simple. [online], Educative: Interactive Courses for Software Developers, accessed 27 August 2023 https://www.educative.io/blog/docker-compose-tutorial.'},
  {'id':29, 'term': 'Release Orchestration', 'description': 'Release orchestration is the process of planning, coordinating, and automating the deployment of software releases or updates across different environments (e.g., development, testing, production). It ensures that software changes are delivered consistently and reliably, often involving automated testing, deployment pipelines, and rollback mechanisms.', 
  'references': 'JetBrains. (n.d.). What is Release Orchestration? | TeamCity CI/CD Guide. [online], accessed 27 August 2023 https://www.jetbrains.com/teamcity/ci-cd-guide/concepts/release-orchestration/. \nEsosa, K. (30 May 2023). The Role of Release Orchestration in Ensuring Software Quality and Stability. [online] Medium, accessed 27 August 2023 https://the1stt.medium.com/the-role-of-release-orchestration-in-ensuring-software-quality-and-stability-c8a34efcf0a5'},
  {'id':30, 'term': 'Jenkins', 'description': 'Jenkins is an open-source automation server commonly used for building, deploying, and automating software development processes. It provides a wide range of plugins and integrations to support continuous integration and continuous delivery (CI/CD) pipelines, making it a valuable tool for DevOps practices and release management.', 
  'references': 'Riglian, A. (November 2019). What is Jenkins and How Does It Work? [online], accessed 27 August 2023 https://www.techtarget.com/searchsoftwarequality/definition/Jenkins. \nSaurabh (15 November 2022). What is Jenkins? | Jenkins For Continuous Integration. [online], Edureka, accessed 27 August 2023 https://edureka.co/blog/what-is-jenkins/.'},
  {'id':31, 'term': 'Bridge Network', 'description': 'A bridge network is a type of network in container orchestration platforms like Docker. It allows containers connected to the same bridge network to communicate with each other, similar to being on the same local network.', 
  'references': 'Docker Documentation. (2023). Bridge network driver. [online], accessed 10 September 2023 https://docs.docker.com/network/drivers/bridge/. \nAqua. (n.d.). Docker Networking. [online] Available at: https://www.aquasec.com/cloud-native-academy/docker-container/docker-networking/.'},
  {'id':32, 'term': 'Overlay Network', 'description': 'An overlay network is a virtual network that spans multiple nodes or hosts in a container orchestration cluster (e.g., Docker Swarm or Kubernetes). It enables communication between containers running on different hosts as if they were on the same local network, even if they are physically separated.', 
  'references': 'Docker Documentation. (2023). Overlay network driver. [online], accessed 10 September 2023 https://docs.docker.com/network/drivers/overlay/. \nFerdous, F. (24 October 2022). The Overlay Network Driver | Networking in Docker #7. [online], accessed 10 September 2023 https://dev.to/alubhorta/the-overlay-network-driver-networking-in-docker-7-1nfe'},
  {'id':33, 'term': 'Macvlan Network', 'description': 'Macvlan (MAC Virtual LAN) is a type of network in containerization that assigns a unique MAC address to each container, making them appear as separate physical devices on the network. This allows containers to have their own network identity and IP address.', 
  'references': 'Docker Documentation. (2023). Macvlan network driver. [online], accessed 10 September 2023 https://docs.docker.com/network/drivers/macvlan/. \nKumar, S. (2023). Macvlan network driver: Assign MAC address to Docker containers. [online], 4sysops, accessed 10 September 2023 https://4sysops.com/archives/macvlan-network-driver-assign-mac-address-to-docker-containers/'},
  {'id':34, 'term': 'RabbitMQ', 'description': 'RabbitMQ is an open-source message broker software that facilitates message queuing and communication between different parts of a distributed application. It is often used to implement message-based communication patterns in microservices architectures.', 
  'references': 'Rabbitmq.com. (2019). Messaging that just works — RabbitMQ. [online], accessed 10 September 2023. https://www.rabbitmq.com/. \nKamath, D. (2021). RabbitMQ: Developing Message-Based Applications. [online] The Startup, accessed 10 September 2023 https://medium.com/swlh/rabbitmq-developing-message-based-applications-a56003c55649'},
  {'id':35, 'term': 'Live Reload', 'description': 'Live reload is a development feature where changes made to the source code of an application are automatically detected and the application is reloaded or updated in real-time, without requiring a manual restart. This is especially useful for speeding up the development and testing process.', 
  'references': 'West Wind Technologies (28 February 2022). Live Reloading Content during Developmentx [online], West Wind Web Connection, accessed 10 September 2023 https://webconnection.west-wind.com/docs/_5hm1e6kmv.htm \nvaadin.com. (n.d.). Hot Deploy and Live Reload | Configuration | Vaadin Docs. [online], accessed 10 September 2023 https://vaadin.com/docs/latest/configuration/live-reload'},
  {'id':36, 'term': 'Direct Messaging', 'description': 'Direct messaging refers to a form of communication where messages are sent directly from one sender to a specific receiver. It is a one-to-one communication model, often used in various messaging systems and applications.', 
  'references': 'Wikipedia Contributors (2019). Models of communication. [online] Wikipedia, accessed 10 September 2023. https://en.wikipedia.org/wiki/Models_of_communication. \ncourses.lumenlearning.com. (n.d.). Communication Models | Communication for Professionals. [online], accessed 10 September 2023. https://courses.lumenlearning.com/suny-esc-communicationforprofessionals/chapter/communication-process-overview/.'},
  {'id':37, 'term': 'Indirect Messaging', 'description': 'Indirect messaging, refers to a communication model where messages are sent to a central message broker or intermediary, which then routes the messages to one or more receivers based on predefined rules or topics. This is commonly used in pub-sub (publish-subscribe) messaging systems.', 
  'references': 'Indeed Career Guide. (n.d.). Direct vs. Indirect Communication: Definition and Differences. [online], accessed 10 September 2023. https://www.indeed.com/career-advice/career-development/direct-communication. \nUpadhyay, P. (29 November 2022). Pub/Sub Messaging Model. [online], LinkedIn, accessed 10 September 2023. https://www.linkedin.com/pulse/pubsub-messaging-model-pratima-upadhyay-1c'},
  {'id':38, 'term': 'Terraform', 'description': 'Terraform is an open-source infrastructure as code (IaC) tool developed by HashiCorp. It allows users to define and provision infrastructure and resources, such as virtual machines, networks, and databases, in a declarative configuration file, making it easier to manage and automate infrastructure.', 
  'references': 'Hashicorp (n.d.). What is Terraform [online], HashiCorp Developer, accessed 10 September 2023. https://developer.hashicorp.com/terraform/intro. \nAwati, R., Gillis, A. S. (August 2023). Terraform [online], TechTarget, accessed 10 September 2023. https://www.techtarget.com/searchitoperations/definition/Terraform.'},
  {'id':39, 'term': 'Kubernetes Pod', 'description': 'In Kubernetes, a Pod is the smallest deployable unit. It can contain one or more containers that share the same network namespace, storage, and IP address. Pods are used to group and manage containers that need to work closely together.', 
  'references': 'vmware glossary (n.d.) What are Kubernetes Pods? [online], accessed 10 September 2023. https://www.vmware.com/au/topics/glossary/content/kubernetes-pods.html \nSematext. (n.d.). What is a Kubernetes Pod: Definition & How It Works. [online], accessed 10 September 2023. https://sematext.com/glossary/kubernetes-pod/'},
  {'id':40, 'term': 'Kubernetes Kubelet', 'description': 'Kubelet is an essential component of a Kubernetes node (worker node). It is responsible for ensuring that containers are running within Pods as specified in the clusters configuration. Kubelet interacts with the container runtime to manage container lifecycles and health.', 
  'references': 'Kubernetes. (n.d.). kubelet. [online], accessed 10 September 2023. https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/. \nSpot.io. (n.d.). Kubernetes Architecture: Control Plane, Data Plane, and 11 Core Components Explained [online], accessed 10 September 2023. https://spot.io/resources/kubernetes-architecture/11-core-components-explained/.'},
  {'id':41, 'term': 'Containers as a Service (CaaS)', 'description': 'Containers as a Service is a cloud computing service that provides a platform for managing and deploying containerized applications. It enables DevOps teams to easily deploy and scale containerized applications without managing the underlying infrastructure.', 
  'references': 'Kanade, V. (14 August 2023). What Is Container-as-a-Service (CaaS)? Definition, Examples, Architecture, and Best Practices [online] Spiceworks, accessed 24 September 2023.   https://www.spiceworks.com/tech/devops/articles/what-is-caas/ \nazure.microsoft.com. (n.d.). What is a container? | Microsoft Azure. [online], accessed 24 September 2023.  https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-a-container'},
  {'id':42, 'term': 'Regression Test', 'description': 'In DevOps, regression testing is the process of retesting a software application after changes or updates to ensure that new code modifications haven not introduced unintended defects or broken existing functionality.', 
  'references': 'Tricentis. (n.d.). Learn with Tricentis: What is regression testing? [online], accessed 24 September 2023.  https://www.tricentis.com/learn/regression-testing/ \nDaityari, S. (24 June 2023). Regression Testing: A Detailed Guide [online], BrowserStack, accessed 24 September 2023. https://www.browserstack.com/guide/regression-testing.'},
  {'id':43, 'term': 'Integration Testing', 'description': 'Integration testing in DevOps involves testing the interactions and interfaces between different software components, modules, or services to ensure they work together as expected within the integrated system.', 
  'references': 'Awati, R. (January 2022). What is Integration Testing (I&T)? [online] TechTarget, accessed 24 September 2023. https://www.techtarget.com/searchsoftwarequality/definition/integration-testing. \nSoftware Testing Help (16 June 2023). What is Integration Testing (Tutorial with Integration Testing Example) [online] Softwaretestinghelp.com, accessed 24 September 2023. https://www.softwaretestinghelp.com/what-is-integration-testing/'},
  {'id':44, 'term': 'End-to-End Testing', 'description': 'End-to-End testing in DevOps is a comprehensive testing approach that assesses the entire software application from the users perspective, verifying that all components, integrations, and interactions function correctly from start to finish.', 
  'references': 'Bose. S. (20 February 2023). End To End Testing: A Detailed Guide. [online] BrowserStack, accessed 24 September 2023. https://www.browserstack.com/guide/end-to-end-testing. \nGillis, A. S. (March 2023). What is end-to-end testing? | Definition from TechTarget. [online], accessed 24 September 2023. https://www.techtarget.com/searchsoftwarequality/definition/End-to-end-testing.'},
  {'id':45, 'term': 'Exploratory Testing', 'description': 'Exploratory testing is a dynamic and unscripted approach to software testing where testers simultaneously design and execute test cases. Unlike traditional scripted testing, it does not rely on predefined test cases but relies on the testers domain knowledge, intuition, and creativity. Testers explore the applications functionality and actively search for defects while learning about the system. The goal is to uncover unexpected issues and provide rapid feedback to improve the software.', 
  'references': 'Parmar, D. (n.d.). Exploratory Testing. [online] Atlassian, accessed 24 September 2023. https://www.atlassian.com/continuous-delivery/software-testing/exploratory-testing. \nHamilton, T. (16 September 2023). What is Exploratory Testing? Techniques with Examples. [online] Guru99.com, accessed 24 September 2023. https://www.guru99.com/exploratory-testing.html.'},
  {'id':46, 'term': 'Model-Based Testing', 'description': 'Model-Based Testing is a testing technique that leverages models, often represented graphically, to describe the expected behavior of a software system. These models can include state diagrams, flowcharts, or other formal representations. Testers or testing tools use these models to automatically generate test cases and perform testing. This approach helps ensure that the software conforms to its specified behavior as described in the models.', 
  'references': 'Wikipedia. (2020). Model-based testing. [online], accessed 24 September 2023. https://en.wikipedia.org/wiki/Model-based_testing. \nLawrence, A. (18 June 2020). How to Improve Your Workflow Using Model-Based Testing [online] freeCodeCamp.org, accessed 24 September 2023. https://www.freecodecamp.org/news/improve-your-workflow-using-model-based-testing/'},
  {'id':47, 'term': 'Interpolation', 'description': 'Interpolation is a mathematical technique used to estimate values between two known data points. It involves determining the value of an unknown point based on the values of nearby known points. Interpolation is widely used in various fields, including mathematics, computer graphics, and engineering, to approximate data between discrete measurements or to create smooth curves or transitions. In the context of DevOps or software development, interpolation may be used in data analysis or visualization to fill in gaps in datasets or create more accurate representations of trends.', 
  'references': 'Kenton, W. (21 November 2022). Interpolation. [online] Investopedia, accessed 24 September 2023. https://www.investopedia.com/terms/i/interpolation.asp. \nLinkedIn community (n.d.). What are the advantages and disadvantages of using interpolation and extrapolation techniques? [online] LinkedIn, accessed 24 September 2023. https://www.linkedin.com/advice/0/what-advantages-disadvantages-using-interpolation'},
  {'id':48, 'term': 'OAuth', 'description': 'OAuth is a protocol used in DevOps and application development to enable secure, delegated access to resources or services without sharing sensitive credentials. It is often used for authentication and authorization in APIs and microservices.', 
  'references': 'Brown, S. (05 January 2023). What is Open Authorization (OAuth)? [online] StrongDM, accessed 24 September 2023. https://www.strongdm.com/what-is/open-authorization-oauth \nBailey, T. (12 July 2023). OAuth Token: What It Is, How It Works, and Its Vulnerabilities. [online] AppOmni, accessed 24 September 2023. https://appomni.com/blog_post/oauth-token-what-it-is-how-it-works-and-its-vulnerabilities/'},
  {'id':49, 'term': 'Webhook', 'description': 'In DevOps, a webhook is a mechanism that allows one application or system to trigger automated actions or notifications in another system. Webhooks are commonly used for integrating external tools or services into the DevOps pipeline, such as triggering a build when code is pushed to a repository.', 
  'references': 'Kumar, R. (28 August 2023). What is Webhook? [online] DevOpsSchool, accessed 24 September 2023. https://www.devopsschool.com/blog/what-is-webhook/ \nAtlassian Support. (n.d.). Manage webhooks | Bitbucket Cloud. [online], accessed 24 September 2023. https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/'},
  {'id':50, 'term': 'SSH Key', 'description': 'In DevOps, SSH keys are cryptographic key pairs used for secure authentication and communication between systems or servers. They are often employed for secure remote access, file transfers, and automated deployment in the DevOps process.', 
  'references': 'vijayma (22 June 2023). Use SSH key authentication - Azure Repos. [online] learn.microsoft.com, accessed 24 September 2023. https://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops. \nAppViewX. (n.d.). SSH | SSH Keys | What are SSH keys? | Secure Shell. [online], accessed 24 September 2023. https://www.appviewx.com/education-center/what-are-ssh-keys/.'}
  ];

/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { title: 'SIT722 DevOps Glossary', subhead: 'Welcome to my website showing a collection of DevOps terms and their brief descriptions.', table:tableList });
});

module.exports = router;
